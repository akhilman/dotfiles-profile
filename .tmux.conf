# smcup/rmcup is for scrolling support
# set-option -ga terminal-overrides ",*:Tc:smcup@:rmcup@"

# force RGB color support
# replace RGB by Tc for tmux < 3.2
set  -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB,xterm-256color:RGB,gnome*:RGB"

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'XDG_SESSION_ID QT_STYLE_OVERRIDE XDG_SESSION_PATH SSH_AUTH_SOCK XDG_SESSION_TYPE DBUS_SESSION_BUS_ADDRESS DISPLAY WAYLAND_DISPLAY GPG_AGENT_INFO SESSION_MANAGER SSH_AGENT_PID WINDOWID XAUTHORITY XDG_SEAT XDG_SEAT_PATH XDG_VTNR SWAYSOCK I3SOCK'

# shell
set -g default-command /bin/bash
if-shell "[ -x /usr/bin/fish ]" "set -g default-command /usr/bin/fish"
# set -g default-shell /bin/sh

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# history
set -g history-limit 10000

# status line
set -g status-justify left
set -g status-bg grey15
set -g status-fg grey74
set -g status-interval 2
set -g status-right " #(uptime | cut -d ',' -f 4 | cut -d ':' -f 2 | tr -d ' ')  %R  #H "
set -g status-left "#{?client_prefix,#[bg=yellow]#[fg=black]<#S>#[default], #S }"
set-window-option -g window-status-current-style fg=grey100,bg=grey11,bold
set-window-option -g window-status-bell-style fg=yellow
set-window-option -g window-status-format " #I#F #W "
set-window-option -g window-status-current-format " #I#F #W "
set-window-option -g window-status-separator ""

## powerline
# if-shell "( [ \"$COLORTERM\" = 'truecolor' ] || echo \"$TERM\" | grep -q 256color ) && which powerline-config" 'run-shell "powerline-config tmux setup"'

## window name
set -gw automatic-rename "on"
set -gw automatic-rename-format '#{=/19/…:pane_title}'

## xterm window title
set -g set-titles on
set -g set-titles-string '#(whoami)@#h/#S ∙ #T'

# use vi mode
set -g mode-keys vi
set -g status-keys vi
set -sg escape-time 10  # fix for neovim escape key delay

# pane navigation
bind-key k      select-pane -U
bind-key j      select-pane -D
bind-key h      select-pane -L
bind-key l      select-pane -R

# pane movement
bind-key J      join-pane
bind-key S      command-prompt -p "send pane to:"  "join-pane -t '%%'"

# new session
bind-key C      new

# previous window/pane/session
bind-key Tab   last-window

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c {
  if-shell "[ x$WAYLAND_DISPLAY != x ] && command -v wl-copy > /dev/null" {
    run-shell "tmux save-buffer - | wl-copy > /dev/null"
  } {
    run-shell "tmux save-buffer - | xclip -i -selection clipboard > /dev/null"
  }
}
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v {
  if-shell "[ x$WAYLAND_DISPLAY != x ] && command -v wl-paste > /dev/null" {
    run-shell "tmux set-buffer -- \"$(wl-paste)\"; tmux paste-buffer"
  } {
    run-shell "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
  }
}

# use mouse in copy mode
set -g mouse on

# do not scroll on copy
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi y send-keys -X copy-selection

# lock
set -g lock-command vlock
